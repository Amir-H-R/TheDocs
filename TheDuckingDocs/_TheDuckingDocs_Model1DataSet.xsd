<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="_TheDuckingDocs_Model1DataSet" targetNamespace="http://tempuri.org/_TheDuckingDocs_Model1DataSet.xsd" xmlns:mstns="http://tempuri.org/_TheDuckingDocs_Model1DataSet.xsd" xmlns="http://tempuri.org/_TheDuckingDocs_Model1DataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="TheDuckingDocs_Model1ConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="TheDuckingDocs_Model1ConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.TheDuckingDocs.Properties.Settings.GlobalReference.Default.TheDuckingDocs_Model1ConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="__MigrationHistoryTableAdapter" GeneratorDataComponentClassName="__MigrationHistoryTableAdapter" Name="__MigrationHistory" UserDataComponentName="__MigrationHistoryTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TheDuckingDocs_Model1ConnectionString (Settings)" DbObjectName="[TheDuckingDocs.Model1].dbo.__MigrationHistory" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[__MigrationHistory] WHERE (([MigrationId] = @Original_MigrationId) AND ([ContextKey] = @Original_ContextKey) AND ([ProductVersion] = @Original_ProductVersion))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_MigrationId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MigrationId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ContextKey" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ContextKey" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ProductVersion" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ProductVersion" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[__MigrationHistory] ([MigrationId], [ContextKey], [Model], [ProductVersion]) VALUES (@MigrationId, @ContextKey, @Model, @ProductVersion);
SELECT MigrationId, ContextKey, Model, ProductVersion FROM __MigrationHistory WHERE (ContextKey = @ContextKey) AND (MigrationId = @MigrationId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@MigrationId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MigrationId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ContextKey" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ContextKey" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Model" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="Model" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ProductVersion" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ProductVersion" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT MigrationId, ContextKey, Model, ProductVersion FROM dbo.[__MigrationHistory]</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[__MigrationHistory] SET [MigrationId] = @MigrationId, [ContextKey] = @ContextKey, [Model] = @Model, [ProductVersion] = @ProductVersion WHERE (([MigrationId] = @Original_MigrationId) AND ([ContextKey] = @Original_ContextKey) AND ([ProductVersion] = @Original_ProductVersion));
SELECT MigrationId, ContextKey, Model, ProductVersion FROM __MigrationHistory WHERE (ContextKey = @ContextKey) AND (MigrationId = @MigrationId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@MigrationId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MigrationId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ContextKey" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ContextKey" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Model" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="Model" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ProductVersion" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ProductVersion" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_MigrationId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MigrationId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ContextKey" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ContextKey" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ProductVersion" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ProductVersion" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MigrationId" DataSetColumn="MigrationId" />
              <Mapping SourceColumn="ContextKey" DataSetColumn="ContextKey" />
              <Mapping SourceColumn="Model" DataSetColumn="Model" />
              <Mapping SourceColumn="ProductVersion" DataSetColumn="ProductVersion" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AppointmentsTableAdapter" GeneratorDataComponentClassName="AppointmentsTableAdapter" Name="Appointments" UserDataComponentName="AppointmentsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TheDuckingDocs_Model1ConnectionString (Settings)" DbObjectName="[TheDuckingDocs.Model1].dbo.Appointments" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Appointments] WHERE (([AppointmentId] = @Original_AppointmentId) AND ([DoctorId] = @Original_DoctorId) AND ([PatientId] = @Original_PatientId) AND ((@IsNull_AppointmentDate = 1 AND [AppointmentDate] IS NULL) OR ([AppointmentDate] = @Original_AppointmentDate)) AND ([Status] = @Original_Status))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AppointmentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AppointmentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_DoctorId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DoctorId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PatientId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PatientId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_AppointmentDate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AppointmentDate" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_AppointmentDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="AppointmentDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Status" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Status" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Appointments] ([DoctorId], [PatientId], [AppointmentDate], [Status]) VALUES (@DoctorId, @PatientId, @AppointmentDate, @Status);
SELECT AppointmentId, DoctorId, PatientId, AppointmentDate, Status FROM Appointments WHERE (AppointmentId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@DoctorId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DoctorId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PatientId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PatientId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@AppointmentDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="AppointmentDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Status" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Status" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT AppointmentId, DoctorId, PatientId, AppointmentDate, Status FROM dbo.Appointments</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Appointments] SET [DoctorId] = @DoctorId, [PatientId] = @PatientId, [AppointmentDate] = @AppointmentDate, [Status] = @Status WHERE (([AppointmentId] = @Original_AppointmentId) AND ([DoctorId] = @Original_DoctorId) AND ([PatientId] = @Original_PatientId) AND ((@IsNull_AppointmentDate = 1 AND [AppointmentDate] IS NULL) OR ([AppointmentDate] = @Original_AppointmentDate)) AND ([Status] = @Original_Status));
SELECT AppointmentId, DoctorId, PatientId, AppointmentDate, Status FROM Appointments WHERE (AppointmentId = @AppointmentId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@DoctorId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DoctorId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PatientId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PatientId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@AppointmentDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="AppointmentDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Status" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Status" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AppointmentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AppointmentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_DoctorId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DoctorId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PatientId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PatientId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_AppointmentDate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AppointmentDate" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_AppointmentDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="AppointmentDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Status" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Status" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="AppointmentId" ColumnName="AppointmentId" DataSourceName="[TheDuckingDocs.Model1].dbo.Appointments" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AppointmentId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AppointmentId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="AppointmentId" DataSetColumn="AppointmentId" />
              <Mapping SourceColumn="DoctorId" DataSetColumn="DoctorId" />
              <Mapping SourceColumn="PatientId" DataSetColumn="PatientId" />
              <Mapping SourceColumn="AppointmentDate" DataSetColumn="AppointmentDate" />
              <Mapping SourceColumn="Status" DataSetColumn="Status" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DoctorsTableAdapter" GeneratorDataComponentClassName="DoctorsTableAdapter" Name="Doctors" UserDataComponentName="DoctorsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TheDuckingDocs_Model1ConnectionString (Settings)" DbObjectName="[TheDuckingDocs.Model1].dbo.Doctors" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Doctors] WHERE (([DoctorId] = @Original_DoctorId) AND ([StartTime] = @Original_StartTime) AND ([EndTime] = @Original_EndTime) AND ((@IsNull_DoctorInfo_PersonId = 1 AND [DoctorInfo_PersonId] IS NULL) OR ([DoctorInfo_PersonId] = @Original_DoctorInfo_PersonId)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_DoctorId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DoctorId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_StartTime" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="StartTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_EndTime" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="EndTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_DoctorInfo_PersonId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DoctorInfo_PersonId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_DoctorInfo_PersonId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DoctorInfo_PersonId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Doctors] ([StartTime], [EndTime], [DoctorInfo_PersonId]) VALUES (@StartTime, @EndTime, @DoctorInfo_PersonId);
SELECT DoctorId, StartTime, EndTime, DoctorInfo_PersonId FROM Doctors WHERE (DoctorId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@StartTime" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="StartTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@EndTime" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="EndTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@DoctorInfo_PersonId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DoctorInfo_PersonId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT DoctorId, StartTime, EndTime, DoctorInfo_PersonId FROM dbo.Doctors</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Doctors] SET [StartTime] = @StartTime, [EndTime] = @EndTime, [DoctorInfo_PersonId] = @DoctorInfo_PersonId WHERE (([DoctorId] = @Original_DoctorId) AND ([StartTime] = @Original_StartTime) AND ([EndTime] = @Original_EndTime) AND ((@IsNull_DoctorInfo_PersonId = 1 AND [DoctorInfo_PersonId] IS NULL) OR ([DoctorInfo_PersonId] = @Original_DoctorInfo_PersonId)));
SELECT DoctorId, StartTime, EndTime, DoctorInfo_PersonId FROM Doctors WHERE (DoctorId = @DoctorId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@StartTime" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="StartTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@EndTime" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="EndTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@DoctorInfo_PersonId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DoctorInfo_PersonId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_DoctorId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DoctorId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_StartTime" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="StartTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_EndTime" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="EndTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_DoctorInfo_PersonId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DoctorInfo_PersonId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_DoctorInfo_PersonId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DoctorInfo_PersonId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="DoctorId" ColumnName="DoctorId" DataSourceName="[TheDuckingDocs.Model1].dbo.Doctors" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@DoctorId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="DoctorId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="DoctorId" DataSetColumn="DoctorId" />
              <Mapping SourceColumn="StartTime" DataSetColumn="StartTime" />
              <Mapping SourceColumn="EndTime" DataSetColumn="EndTime" />
              <Mapping SourceColumn="DoctorInfo_PersonId" DataSetColumn="DoctorInfo_PersonId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DoctorSpecializationsTableAdapter" GeneratorDataComponentClassName="DoctorSpecializationsTableAdapter" Name="DoctorSpecializations" UserDataComponentName="DoctorSpecializationsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TheDuckingDocs_Model1ConnectionString (Settings)" DbObjectName="[TheDuckingDocs.Model1].dbo.DoctorSpecializations" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[DoctorSpecializations] WHERE (([Id] = @Original_Id) AND ([SpecializationId] = @Original_SpecializationId) AND ([DoctorId] = @Original_DoctorId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SpecializationId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SpecializationId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_DoctorId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DoctorId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[DoctorSpecializations] ([SpecializationId], [DoctorId]) VALUES (@SpecializationId, @DoctorId);
SELECT Id, SpecializationId, DoctorId FROM DoctorSpecializations WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SpecializationId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SpecializationId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@DoctorId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DoctorId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, SpecializationId, DoctorId FROM dbo.DoctorSpecializations</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[DoctorSpecializations] SET [SpecializationId] = @SpecializationId, [DoctorId] = @DoctorId WHERE (([Id] = @Original_Id) AND ([SpecializationId] = @Original_SpecializationId) AND ([DoctorId] = @Original_DoctorId));
SELECT Id, SpecializationId, DoctorId FROM DoctorSpecializations WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SpecializationId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SpecializationId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@DoctorId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DoctorId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SpecializationId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SpecializationId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_DoctorId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DoctorId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="[TheDuckingDocs.Model1].dbo.DoctorSpecializations" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="SpecializationId" DataSetColumn="SpecializationId" />
              <Mapping SourceColumn="DoctorId" DataSetColumn="DoctorId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PatientsTableAdapter" GeneratorDataComponentClassName="PatientsTableAdapter" Name="Patients" UserDataComponentName="PatientsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TheDuckingDocs_Model1ConnectionString (Settings)" DbObjectName="[TheDuckingDocs.Model1].dbo.Patients" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Patients] WHERE (([PatientId] = @Original_PatientId) AND ([BirthDate] = @Original_BirthDate) AND ([AppointmentId] = @Original_AppointmentId) AND ((@IsNull_PatientInfo_PersonId = 1 AND [PatientInfo_PersonId] IS NULL) OR ([PatientInfo_PersonId] = @Original_PatientInfo_PersonId)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PatientId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PatientId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_BirthDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="BirthDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AppointmentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AppointmentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_PatientInfo_PersonId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PatientInfo_PersonId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PatientInfo_PersonId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PatientInfo_PersonId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Patients] ([BirthDate], [Address], [AppointmentId], [PatientInfo_PersonId]) VALUES (@BirthDate, @Address, @AppointmentId, @PatientInfo_PersonId);
SELECT PatientId, BirthDate, Address, AppointmentId, PatientInfo_PersonId FROM Patients WHERE (PatientId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@BirthDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="BirthDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Address" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Address" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AppointmentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AppointmentId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PatientInfo_PersonId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PatientInfo_PersonId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT PatientId, BirthDate, Address, AppointmentId, PatientInfo_PersonId FROM dbo.Patients</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Patients] SET [BirthDate] = @BirthDate, [Address] = @Address, [AppointmentId] = @AppointmentId, [PatientInfo_PersonId] = @PatientInfo_PersonId WHERE (([PatientId] = @Original_PatientId) AND ([BirthDate] = @Original_BirthDate) AND ([AppointmentId] = @Original_AppointmentId) AND ((@IsNull_PatientInfo_PersonId = 1 AND [PatientInfo_PersonId] IS NULL) OR ([PatientInfo_PersonId] = @Original_PatientInfo_PersonId)));
SELECT PatientId, BirthDate, Address, AppointmentId, PatientInfo_PersonId FROM Patients WHERE (PatientId = @PatientId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@BirthDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="BirthDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Address" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Address" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AppointmentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AppointmentId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PatientInfo_PersonId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PatientInfo_PersonId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PatientId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PatientId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_BirthDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="BirthDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AppointmentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AppointmentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_PatientInfo_PersonId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PatientInfo_PersonId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PatientInfo_PersonId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PatientInfo_PersonId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="PatientId" ColumnName="PatientId" DataSourceName="[TheDuckingDocs.Model1].dbo.Patients" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@PatientId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="PatientId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="PatientId" DataSetColumn="PatientId" />
              <Mapping SourceColumn="BirthDate" DataSetColumn="BirthDate" />
              <Mapping SourceColumn="Address" DataSetColumn="Address" />
              <Mapping SourceColumn="AppointmentId" DataSetColumn="AppointmentId" />
              <Mapping SourceColumn="PatientInfo_PersonId" DataSetColumn="PatientInfo_PersonId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PeopleTableAdapter" GeneratorDataComponentClassName="PeopleTableAdapter" Name="People" UserDataComponentName="PeopleTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TheDuckingDocs_Model1ConnectionString (Settings)" DbObjectName="[TheDuckingDocs.Model1].dbo.People" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[People] WHERE (([PersonId] = @Original_PersonId) AND ([Age] = @Original_Age))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PersonId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PersonId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Age" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Age" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[People] ([Name], [LastName], [Age], [PhoneNumber], [UserName], [Password], [IdCardNumber]) VALUES (@Name, @LastName, @Age, @PhoneNumber, @UserName, @Password, @IdCardNumber);
SELECT PersonId, Name, LastName, Age, PhoneNumber, UserName, Password, IdCardNumber FROM People WHERE (PersonId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LastName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LastName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Age" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Age" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@PhoneNumber" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PhoneNumber" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@UserName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@IdCardNumber" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="IdCardNumber" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT PersonId, Name, LastName, Age, PhoneNumber, UserName, Password, IdCardNumber FROM dbo.People</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[People] SET [Name] = @Name, [LastName] = @LastName, [Age] = @Age, [PhoneNumber] = @PhoneNumber, [UserName] = @UserName, [Password] = @Password, [IdCardNumber] = @IdCardNumber WHERE (([PersonId] = @Original_PersonId) AND ([Age] = @Original_Age));
SELECT PersonId, Name, LastName, Age, PhoneNumber, UserName, Password, IdCardNumber FROM People WHERE (PersonId = @PersonId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LastName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LastName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Age" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Age" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@PhoneNumber" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PhoneNumber" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@UserName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@IdCardNumber" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="IdCardNumber" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PersonId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PersonId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Age" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Age" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="PersonId" ColumnName="PersonId" DataSourceName="[TheDuckingDocs.Model1].dbo.People" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@PersonId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="PersonId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="PersonId" DataSetColumn="PersonId" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="LastName" DataSetColumn="LastName" />
              <Mapping SourceColumn="Age" DataSetColumn="Age" />
              <Mapping SourceColumn="PhoneNumber" DataSetColumn="PhoneNumber" />
              <Mapping SourceColumn="UserName" DataSetColumn="UserName" />
              <Mapping SourceColumn="Password" DataSetColumn="Password" />
              <Mapping SourceColumn="IdCardNumber" DataSetColumn="IdCardNumber" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PeopleRolesTableAdapter" GeneratorDataComponentClassName="PeopleRolesTableAdapter" Name="PeopleRoles" UserDataComponentName="PeopleRolesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TheDuckingDocs_Model1ConnectionString (Settings)" DbObjectName="[TheDuckingDocs.Model1].dbo.PeopleRoles" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[PeopleRoles] WHERE (([Id] = @Original_Id) AND ([PersonId] = @Original_PersonId) AND ([RoleId] = @Original_RoleId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PersonId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PersonId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_RoleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoleId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[PeopleRoles] ([PersonId], [RoleId]) VALUES (@PersonId, @RoleId);
SELECT Id, PersonId, RoleId FROM PeopleRoles WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PersonId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PersonId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@RoleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoleId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, PersonId, RoleId FROM dbo.PeopleRoles</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[PeopleRoles] SET [PersonId] = @PersonId, [RoleId] = @RoleId WHERE (([Id] = @Original_Id) AND ([PersonId] = @Original_PersonId) AND ([RoleId] = @Original_RoleId));
SELECT Id, PersonId, RoleId FROM PeopleRoles WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PersonId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PersonId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@RoleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoleId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PersonId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PersonId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_RoleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoleId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="[TheDuckingDocs.Model1].dbo.PeopleRoles" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="PersonId" DataSetColumn="PersonId" />
              <Mapping SourceColumn="RoleId" DataSetColumn="RoleId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RolePersonsTableAdapter" GeneratorDataComponentClassName="RolePersonsTableAdapter" Name="RolePersons" UserDataComponentName="RolePersonsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TheDuckingDocs_Model1ConnectionString (Settings)" DbObjectName="[TheDuckingDocs.Model1].dbo.RolePersons" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[RolePersons] WHERE (([Role_RoleId] = @Original_Role_RoleId) AND ([Person_PersonId] = @Original_Person_PersonId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Role_RoleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Role_RoleId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Person_PersonId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Person_PersonId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[RolePersons] ([Role_RoleId], [Person_PersonId]) VALUES (@Role_RoleId, @Person_PersonId);
SELECT Role_RoleId, Person_PersonId FROM RolePersons WHERE (Person_PersonId = @Person_PersonId) AND (Role_RoleId = @Role_RoleId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Role_RoleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Role_RoleId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Person_PersonId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Person_PersonId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Role_RoleId, Person_PersonId FROM dbo.RolePersons</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[RolePersons] SET [Role_RoleId] = @Role_RoleId, [Person_PersonId] = @Person_PersonId WHERE (([Role_RoleId] = @Original_Role_RoleId) AND ([Person_PersonId] = @Original_Person_PersonId));
SELECT Role_RoleId, Person_PersonId FROM RolePersons WHERE (Person_PersonId = @Person_PersonId) AND (Role_RoleId = @Role_RoleId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Role_RoleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Role_RoleId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Person_PersonId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Person_PersonId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Role_RoleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Role_RoleId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Person_PersonId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Person_PersonId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Role_RoleId" DataSetColumn="Role_RoleId" />
              <Mapping SourceColumn="Person_PersonId" DataSetColumn="Person_PersonId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RolesTableAdapter" GeneratorDataComponentClassName="RolesTableAdapter" Name="Roles" UserDataComponentName="RolesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TheDuckingDocs_Model1ConnectionString (Settings)" DbObjectName="[TheDuckingDocs.Model1].dbo.Roles" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Roles] WHERE (([RoleId] = @Original_RoleId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_RoleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoleId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Roles] ([Name]) VALUES (@Name);
SELECT RoleId, Name FROM Roles WHERE (RoleId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT RoleId, Name FROM dbo.Roles</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Roles] SET [Name] = @Name WHERE (([RoleId] = @Original_RoleId));
SELECT RoleId, Name FROM Roles WHERE (RoleId = @RoleId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_RoleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoleId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="RoleId" ColumnName="RoleId" DataSourceName="[TheDuckingDocs.Model1].dbo.Roles" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@RoleId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="RoleId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="RoleId" DataSetColumn="RoleId" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SpecializationDoctorsTableAdapter" GeneratorDataComponentClassName="SpecializationDoctorsTableAdapter" Name="SpecializationDoctors" UserDataComponentName="SpecializationDoctorsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TheDuckingDocs_Model1ConnectionString (Settings)" DbObjectName="[TheDuckingDocs.Model1].dbo.SpecializationDoctors" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[SpecializationDoctors] WHERE (([Specialization_SpecializationId] = @Original_Specialization_SpecializationId) AND ([Doctor_DoctorId] = @Original_Doctor_DoctorId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Specialization_SpecializationId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Specialization_SpecializationId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Doctor_DoctorId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Doctor_DoctorId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[SpecializationDoctors] ([Specialization_SpecializationId], [Doctor_DoctorId]) VALUES (@Specialization_SpecializationId, @Doctor_DoctorId);
SELECT Specialization_SpecializationId, Doctor_DoctorId FROM SpecializationDoctors WHERE (Doctor_DoctorId = @Doctor_DoctorId) AND (Specialization_SpecializationId = @Specialization_SpecializationId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Specialization_SpecializationId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Specialization_SpecializationId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Doctor_DoctorId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Doctor_DoctorId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Specialization_SpecializationId, Doctor_DoctorId FROM dbo.SpecializationDoctors</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[SpecializationDoctors] SET [Specialization_SpecializationId] = @Specialization_SpecializationId, [Doctor_DoctorId] = @Doctor_DoctorId WHERE (([Specialization_SpecializationId] = @Original_Specialization_SpecializationId) AND ([Doctor_DoctorId] = @Original_Doctor_DoctorId));
SELECT Specialization_SpecializationId, Doctor_DoctorId FROM SpecializationDoctors WHERE (Doctor_DoctorId = @Doctor_DoctorId) AND (Specialization_SpecializationId = @Specialization_SpecializationId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Specialization_SpecializationId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Specialization_SpecializationId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Doctor_DoctorId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Doctor_DoctorId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Specialization_SpecializationId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Specialization_SpecializationId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Doctor_DoctorId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Doctor_DoctorId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Specialization_SpecializationId" DataSetColumn="Specialization_SpecializationId" />
              <Mapping SourceColumn="Doctor_DoctorId" DataSetColumn="Doctor_DoctorId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SpecializationsTableAdapter" GeneratorDataComponentClassName="SpecializationsTableAdapter" Name="Specializations" UserDataComponentName="SpecializationsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TheDuckingDocs_Model1ConnectionString (Settings)" DbObjectName="[TheDuckingDocs.Model1].dbo.Specializations" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Specializations] WHERE (([SpecializationId] = @Original_SpecializationId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SpecializationId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SpecializationId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Specializations] ([Name]) VALUES (@Name);
SELECT SpecializationId, Name FROM Specializations WHERE (SpecializationId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT SpecializationId, Name FROM dbo.Specializations</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Specializations] SET [Name] = @Name WHERE (([SpecializationId] = @Original_SpecializationId));
SELECT SpecializationId, Name FROM Specializations WHERE (SpecializationId = @SpecializationId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SpecializationId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SpecializationId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="SpecializationId" ColumnName="SpecializationId" DataSourceName="[TheDuckingDocs.Model1].dbo.Specializations" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@SpecializationId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="SpecializationId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="SpecializationId" DataSetColumn="SpecializationId" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StaffsTableAdapter" GeneratorDataComponentClassName="StaffsTableAdapter" Name="Staffs" UserDataComponentName="StaffsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TheDuckingDocs_Model1ConnectionString (Settings)" DbObjectName="[TheDuckingDocs.Model1].dbo.Staffs" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Staffs] WHERE (([StaffId] = @Original_StaffId) AND ((@IsNull_StaffInfo_PersonId = 1 AND [StaffInfo_PersonId] IS NULL) OR ([StaffInfo_PersonId] = @Original_StaffInfo_PersonId)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StaffId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StaffId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_StaffInfo_PersonId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StaffInfo_PersonId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StaffInfo_PersonId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StaffInfo_PersonId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Staffs] ([StaffInfo_PersonId]) VALUES (@StaffInfo_PersonId);
SELECT StaffId, StaffInfo_PersonId FROM Staffs WHERE (StaffId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@StaffInfo_PersonId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StaffInfo_PersonId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT StaffId, StaffInfo_PersonId FROM dbo.Staffs</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Staffs] SET [StaffInfo_PersonId] = @StaffInfo_PersonId WHERE (([StaffId] = @Original_StaffId) AND ((@IsNull_StaffInfo_PersonId = 1 AND [StaffInfo_PersonId] IS NULL) OR ([StaffInfo_PersonId] = @Original_StaffInfo_PersonId)));
SELECT StaffId, StaffInfo_PersonId FROM Staffs WHERE (StaffId = @StaffId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@StaffInfo_PersonId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StaffInfo_PersonId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StaffId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StaffId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_StaffInfo_PersonId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StaffInfo_PersonId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StaffInfo_PersonId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StaffInfo_PersonId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="StaffId" ColumnName="StaffId" DataSourceName="[TheDuckingDocs.Model1].dbo.Staffs" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@StaffId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="StaffId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="StaffId" DataSetColumn="StaffId" />
              <Mapping SourceColumn="StaffInfo_PersonId" DataSetColumn="StaffInfo_PersonId" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="_TheDuckingDocs_Model1DataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="_TheDuckingDocs_Model1DataSet" msprop:Generator_DataSetName="_TheDuckingDocs_Model1DataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="__MigrationHistory" msprop:Generator_RowEvHandlerName="__MigrationHistoryRowChangeEventHandler" msprop:Generator_RowDeletedName="__MigrationHistoryRowDeleted" msprop:Generator_RowDeletingName="__MigrationHistoryRowDeleting" msprop:Generator_RowEvArgName="__MigrationHistoryRowChangeEvent" msprop:Generator_TablePropName="__MigrationHistory" msprop:Generator_RowChangedName="__MigrationHistoryRowChanged" msprop:Generator_RowChangingName="__MigrationHistoryRowChanging" msprop:Generator_TableClassName="__MigrationHistoryDataTable" msprop:Generator_RowClassName="__MigrationHistoryRow" msprop:Generator_TableVarName="table__MigrationHistory" msprop:Generator_UserTableName="__MigrationHistory">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MigrationId" msprop:Generator_ColumnPropNameInRow="MigrationId" msprop:Generator_ColumnPropNameInTable="MigrationIdColumn" msprop:Generator_ColumnVarNameInTable="columnMigrationId" msprop:Generator_UserColumnName="MigrationId">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="150" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ContextKey" msprop:Generator_ColumnPropNameInRow="ContextKey" msprop:Generator_ColumnPropNameInTable="ContextKeyColumn" msprop:Generator_ColumnVarNameInTable="columnContextKey" msprop:Generator_UserColumnName="ContextKey">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="300" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Model" msprop:Generator_ColumnPropNameInRow="Model" msprop:Generator_ColumnPropNameInTable="ModelColumn" msprop:Generator_ColumnVarNameInTable="columnModel" msprop:Generator_UserColumnName="Model" type="xs:base64Binary" />
              <xs:element name="ProductVersion" msprop:Generator_ColumnPropNameInRow="ProductVersion" msprop:Generator_ColumnPropNameInTable="ProductVersionColumn" msprop:Generator_ColumnVarNameInTable="columnProductVersion" msprop:Generator_UserColumnName="ProductVersion">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="32" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Appointments" msprop:Generator_RowEvHandlerName="AppointmentsRowChangeEventHandler" msprop:Generator_RowDeletedName="AppointmentsRowDeleted" msprop:Generator_RowDeletingName="AppointmentsRowDeleting" msprop:Generator_RowEvArgName="AppointmentsRowChangeEvent" msprop:Generator_TablePropName="Appointments" msprop:Generator_RowChangedName="AppointmentsRowChanged" msprop:Generator_RowChangingName="AppointmentsRowChanging" msprop:Generator_TableClassName="AppointmentsDataTable" msprop:Generator_RowClassName="AppointmentsRow" msprop:Generator_TableVarName="tableAppointments" msprop:Generator_UserTableName="Appointments">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AppointmentId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="AppointmentId" msprop:Generator_ColumnPropNameInTable="AppointmentIdColumn" msprop:Generator_ColumnVarNameInTable="columnAppointmentId" msprop:Generator_UserColumnName="AppointmentId" type="xs:int" />
              <xs:element name="DoctorId" msprop:Generator_ColumnPropNameInRow="DoctorId" msprop:Generator_ColumnPropNameInTable="DoctorIdColumn" msprop:Generator_ColumnVarNameInTable="columnDoctorId" msprop:Generator_UserColumnName="DoctorId" type="xs:int" />
              <xs:element name="PatientId" msprop:Generator_ColumnPropNameInRow="PatientId" msprop:Generator_ColumnPropNameInTable="PatientIdColumn" msprop:Generator_ColumnVarNameInTable="columnPatientId" msprop:Generator_UserColumnName="PatientId" type="xs:int" />
              <xs:element name="AppointmentDate" msprop:Generator_ColumnPropNameInRow="AppointmentDate" msprop:Generator_ColumnPropNameInTable="AppointmentDateColumn" msprop:Generator_ColumnVarNameInTable="columnAppointmentDate" msprop:Generator_UserColumnName="AppointmentDate" type="xs:dateTime" minOccurs="0" />
              <xs:element name="Status" msprop:Generator_ColumnPropNameInRow="Status" msprop:Generator_ColumnPropNameInTable="StatusColumn" msprop:Generator_ColumnVarNameInTable="columnStatus" msprop:Generator_UserColumnName="Status" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Doctors" msprop:Generator_RowEvHandlerName="DoctorsRowChangeEventHandler" msprop:Generator_RowDeletedName="DoctorsRowDeleted" msprop:Generator_RowDeletingName="DoctorsRowDeleting" msprop:Generator_RowEvArgName="DoctorsRowChangeEvent" msprop:Generator_TablePropName="Doctors" msprop:Generator_RowChangedName="DoctorsRowChanged" msprop:Generator_RowChangingName="DoctorsRowChanging" msprop:Generator_TableClassName="DoctorsDataTable" msprop:Generator_RowClassName="DoctorsRow" msprop:Generator_TableVarName="tableDoctors" msprop:Generator_UserTableName="Doctors">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="DoctorId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="DoctorId" msprop:Generator_ColumnPropNameInTable="DoctorIdColumn" msprop:Generator_ColumnVarNameInTable="columnDoctorId" msprop:Generator_UserColumnName="DoctorId" type="xs:int" />
              <xs:element name="StartTime" msprop:Generator_ColumnPropNameInRow="StartTime" msprop:Generator_ColumnPropNameInTable="StartTimeColumn" msprop:Generator_ColumnVarNameInTable="columnStartTime" msprop:Generator_UserColumnName="StartTime" type="xs:dateTime" />
              <xs:element name="EndTime" msprop:Generator_ColumnPropNameInRow="EndTime" msprop:Generator_ColumnPropNameInTable="EndTimeColumn" msprop:Generator_ColumnVarNameInTable="columnEndTime" msprop:Generator_UserColumnName="EndTime" type="xs:dateTime" />
              <xs:element name="DoctorInfo_PersonId" msprop:Generator_ColumnPropNameInRow="DoctorInfo_PersonId" msprop:Generator_ColumnPropNameInTable="DoctorInfo_PersonIdColumn" msprop:Generator_ColumnVarNameInTable="columnDoctorInfo_PersonId" msprop:Generator_UserColumnName="DoctorInfo_PersonId" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="DoctorSpecializations" msprop:Generator_RowEvHandlerName="DoctorSpecializationsRowChangeEventHandler" msprop:Generator_RowDeletedName="DoctorSpecializationsRowDeleted" msprop:Generator_RowDeletingName="DoctorSpecializationsRowDeleting" msprop:Generator_RowEvArgName="DoctorSpecializationsRowChangeEvent" msprop:Generator_TablePropName="DoctorSpecializations" msprop:Generator_RowChangedName="DoctorSpecializationsRowChanged" msprop:Generator_RowChangingName="DoctorSpecializationsRowChanging" msprop:Generator_TableClassName="DoctorSpecializationsDataTable" msprop:Generator_RowClassName="DoctorSpecializationsRow" msprop:Generator_TableVarName="tableDoctorSpecializations" msprop:Generator_UserTableName="DoctorSpecializations">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="SpecializationId" msprop:Generator_ColumnPropNameInRow="SpecializationId" msprop:Generator_ColumnPropNameInTable="SpecializationIdColumn" msprop:Generator_ColumnVarNameInTable="columnSpecializationId" msprop:Generator_UserColumnName="SpecializationId" type="xs:int" />
              <xs:element name="DoctorId" msprop:Generator_ColumnPropNameInRow="DoctorId" msprop:Generator_ColumnPropNameInTable="DoctorIdColumn" msprop:Generator_ColumnVarNameInTable="columnDoctorId" msprop:Generator_UserColumnName="DoctorId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Patients" msprop:Generator_RowEvHandlerName="PatientsRowChangeEventHandler" msprop:Generator_RowDeletedName="PatientsRowDeleted" msprop:Generator_RowDeletingName="PatientsRowDeleting" msprop:Generator_RowEvArgName="PatientsRowChangeEvent" msprop:Generator_TablePropName="Patients" msprop:Generator_RowChangedName="PatientsRowChanged" msprop:Generator_RowChangingName="PatientsRowChanging" msprop:Generator_TableClassName="PatientsDataTable" msprop:Generator_RowClassName="PatientsRow" msprop:Generator_TableVarName="tablePatients" msprop:Generator_UserTableName="Patients">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="PatientId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="PatientId" msprop:Generator_ColumnPropNameInTable="PatientIdColumn" msprop:Generator_ColumnVarNameInTable="columnPatientId" msprop:Generator_UserColumnName="PatientId" type="xs:int" />
              <xs:element name="BirthDate" msprop:Generator_ColumnPropNameInRow="BirthDate" msprop:Generator_ColumnPropNameInTable="BirthDateColumn" msprop:Generator_ColumnVarNameInTable="columnBirthDate" msprop:Generator_UserColumnName="BirthDate" type="xs:dateTime" />
              <xs:element name="Address" msprop:Generator_ColumnPropNameInRow="Address" msprop:Generator_ColumnPropNameInTable="AddressColumn" msprop:Generator_ColumnVarNameInTable="columnAddress" msprop:Generator_UserColumnName="Address" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="AppointmentId" msprop:Generator_ColumnPropNameInRow="AppointmentId" msprop:Generator_ColumnPropNameInTable="AppointmentIdColumn" msprop:Generator_ColumnVarNameInTable="columnAppointmentId" msprop:Generator_UserColumnName="AppointmentId" type="xs:int" />
              <xs:element name="PatientInfo_PersonId" msprop:Generator_ColumnPropNameInRow="PatientInfo_PersonId" msprop:Generator_ColumnPropNameInTable="PatientInfo_PersonIdColumn" msprop:Generator_ColumnVarNameInTable="columnPatientInfo_PersonId" msprop:Generator_UserColumnName="PatientInfo_PersonId" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="People" msprop:Generator_RowEvHandlerName="PeopleRowChangeEventHandler" msprop:Generator_RowDeletedName="PeopleRowDeleted" msprop:Generator_RowDeletingName="PeopleRowDeleting" msprop:Generator_RowEvArgName="PeopleRowChangeEvent" msprop:Generator_TablePropName="People" msprop:Generator_RowChangedName="PeopleRowChanged" msprop:Generator_RowChangingName="PeopleRowChanging" msprop:Generator_TableClassName="PeopleDataTable" msprop:Generator_RowClassName="PeopleRow" msprop:Generator_TableVarName="tablePeople" msprop:Generator_UserTableName="People">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="PersonId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="PersonId" msprop:Generator_ColumnPropNameInTable="PersonIdColumn" msprop:Generator_ColumnVarNameInTable="columnPersonId" msprop:Generator_UserColumnName="PersonId" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_UserColumnName="Name" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="LastName" msprop:Generator_ColumnPropNameInRow="LastName" msprop:Generator_ColumnPropNameInTable="LastNameColumn" msprop:Generator_ColumnVarNameInTable="columnLastName" msprop:Generator_UserColumnName="LastName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Age" msprop:Generator_ColumnPropNameInRow="Age" msprop:Generator_ColumnPropNameInTable="AgeColumn" msprop:Generator_ColumnVarNameInTable="columnAge" msprop:Generator_UserColumnName="Age" type="xs:int" />
              <xs:element name="PhoneNumber" msprop:Generator_ColumnPropNameInRow="PhoneNumber" msprop:Generator_ColumnPropNameInTable="PhoneNumberColumn" msprop:Generator_ColumnVarNameInTable="columnPhoneNumber" msprop:Generator_UserColumnName="PhoneNumber" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="UserName" msprop:Generator_ColumnPropNameInRow="UserName" msprop:Generator_ColumnPropNameInTable="UserNameColumn" msprop:Generator_ColumnVarNameInTable="columnUserName" msprop:Generator_UserColumnName="UserName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Password" msprop:Generator_ColumnPropNameInRow="Password" msprop:Generator_ColumnPropNameInTable="PasswordColumn" msprop:Generator_ColumnVarNameInTable="columnPassword" msprop:Generator_UserColumnName="Password" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="IdCardNumber" msprop:Generator_ColumnPropNameInRow="IdCardNumber" msprop:Generator_ColumnPropNameInTable="IdCardNumberColumn" msprop:Generator_ColumnVarNameInTable="columnIdCardNumber" msprop:Generator_UserColumnName="IdCardNumber" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="PeopleRoles" msprop:Generator_RowEvHandlerName="PeopleRolesRowChangeEventHandler" msprop:Generator_RowDeletedName="PeopleRolesRowDeleted" msprop:Generator_RowDeletingName="PeopleRolesRowDeleting" msprop:Generator_RowEvArgName="PeopleRolesRowChangeEvent" msprop:Generator_TablePropName="PeopleRoles" msprop:Generator_RowChangedName="PeopleRolesRowChanged" msprop:Generator_RowChangingName="PeopleRolesRowChanging" msprop:Generator_TableClassName="PeopleRolesDataTable" msprop:Generator_RowClassName="PeopleRolesRow" msprop:Generator_TableVarName="tablePeopleRoles" msprop:Generator_UserTableName="PeopleRoles">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="PersonId" msprop:Generator_ColumnPropNameInRow="PersonId" msprop:Generator_ColumnPropNameInTable="PersonIdColumn" msprop:Generator_ColumnVarNameInTable="columnPersonId" msprop:Generator_UserColumnName="PersonId" type="xs:int" />
              <xs:element name="RoleId" msprop:Generator_ColumnPropNameInRow="RoleId" msprop:Generator_ColumnPropNameInTable="RoleIdColumn" msprop:Generator_ColumnVarNameInTable="columnRoleId" msprop:Generator_UserColumnName="RoleId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="RolePersons" msprop:Generator_RowEvHandlerName="RolePersonsRowChangeEventHandler" msprop:Generator_RowDeletedName="RolePersonsRowDeleted" msprop:Generator_RowDeletingName="RolePersonsRowDeleting" msprop:Generator_RowEvArgName="RolePersonsRowChangeEvent" msprop:Generator_TablePropName="RolePersons" msprop:Generator_RowChangedName="RolePersonsRowChanged" msprop:Generator_RowChangingName="RolePersonsRowChanging" msprop:Generator_TableClassName="RolePersonsDataTable" msprop:Generator_RowClassName="RolePersonsRow" msprop:Generator_TableVarName="tableRolePersons" msprop:Generator_UserTableName="RolePersons">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Role_RoleId" msprop:Generator_ColumnPropNameInRow="Role_RoleId" msprop:Generator_ColumnPropNameInTable="Role_RoleIdColumn" msprop:Generator_ColumnVarNameInTable="columnRole_RoleId" msprop:Generator_UserColumnName="Role_RoleId" type="xs:int" />
              <xs:element name="Person_PersonId" msprop:Generator_ColumnPropNameInRow="Person_PersonId" msprop:Generator_ColumnPropNameInTable="Person_PersonIdColumn" msprop:Generator_ColumnVarNameInTable="columnPerson_PersonId" msprop:Generator_UserColumnName="Person_PersonId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Roles" msprop:Generator_RowEvHandlerName="RolesRowChangeEventHandler" msprop:Generator_RowDeletedName="RolesRowDeleted" msprop:Generator_RowDeletingName="RolesRowDeleting" msprop:Generator_RowEvArgName="RolesRowChangeEvent" msprop:Generator_TablePropName="Roles" msprop:Generator_RowChangedName="RolesRowChanged" msprop:Generator_RowChangingName="RolesRowChanging" msprop:Generator_TableClassName="RolesDataTable" msprop:Generator_RowClassName="RolesRow" msprop:Generator_TableVarName="tableRoles" msprop:Generator_UserTableName="Roles">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="RoleId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="RoleId" msprop:Generator_ColumnPropNameInTable="RoleIdColumn" msprop:Generator_ColumnVarNameInTable="columnRoleId" msprop:Generator_UserColumnName="RoleId" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_UserColumnName="Name" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SpecializationDoctors" msprop:Generator_RowEvHandlerName="SpecializationDoctorsRowChangeEventHandler" msprop:Generator_RowDeletedName="SpecializationDoctorsRowDeleted" msprop:Generator_RowDeletingName="SpecializationDoctorsRowDeleting" msprop:Generator_RowEvArgName="SpecializationDoctorsRowChangeEvent" msprop:Generator_TablePropName="SpecializationDoctors" msprop:Generator_RowChangedName="SpecializationDoctorsRowChanged" msprop:Generator_RowChangingName="SpecializationDoctorsRowChanging" msprop:Generator_TableClassName="SpecializationDoctorsDataTable" msprop:Generator_RowClassName="SpecializationDoctorsRow" msprop:Generator_TableVarName="tableSpecializationDoctors" msprop:Generator_UserTableName="SpecializationDoctors">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Specialization_SpecializationId" msprop:Generator_ColumnPropNameInRow="Specialization_SpecializationId" msprop:Generator_ColumnPropNameInTable="Specialization_SpecializationIdColumn" msprop:Generator_ColumnVarNameInTable="columnSpecialization_SpecializationId" msprop:Generator_UserColumnName="Specialization_SpecializationId" type="xs:int" />
              <xs:element name="Doctor_DoctorId" msprop:Generator_ColumnPropNameInRow="Doctor_DoctorId" msprop:Generator_ColumnPropNameInTable="Doctor_DoctorIdColumn" msprop:Generator_ColumnVarNameInTable="columnDoctor_DoctorId" msprop:Generator_UserColumnName="Doctor_DoctorId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Specializations" msprop:Generator_RowEvHandlerName="SpecializationsRowChangeEventHandler" msprop:Generator_RowDeletedName="SpecializationsRowDeleted" msprop:Generator_RowDeletingName="SpecializationsRowDeleting" msprop:Generator_RowEvArgName="SpecializationsRowChangeEvent" msprop:Generator_TablePropName="Specializations" msprop:Generator_RowChangedName="SpecializationsRowChanged" msprop:Generator_RowChangingName="SpecializationsRowChanging" msprop:Generator_TableClassName="SpecializationsDataTable" msprop:Generator_RowClassName="SpecializationsRow" msprop:Generator_TableVarName="tableSpecializations" msprop:Generator_UserTableName="Specializations">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SpecializationId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="SpecializationId" msprop:Generator_ColumnPropNameInTable="SpecializationIdColumn" msprop:Generator_ColumnVarNameInTable="columnSpecializationId" msprop:Generator_UserColumnName="SpecializationId" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_UserColumnName="Name" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Staffs" msprop:Generator_RowEvHandlerName="StaffsRowChangeEventHandler" msprop:Generator_RowDeletedName="StaffsRowDeleted" msprop:Generator_RowDeletingName="StaffsRowDeleting" msprop:Generator_RowEvArgName="StaffsRowChangeEvent" msprop:Generator_TablePropName="Staffs" msprop:Generator_RowChangedName="StaffsRowChanged" msprop:Generator_RowChangingName="StaffsRowChanging" msprop:Generator_TableClassName="StaffsDataTable" msprop:Generator_RowClassName="StaffsRow" msprop:Generator_TableVarName="tableStaffs" msprop:Generator_UserTableName="Staffs">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="StaffId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="StaffId" msprop:Generator_ColumnPropNameInTable="StaffIdColumn" msprop:Generator_ColumnVarNameInTable="columnStaffId" msprop:Generator_UserColumnName="StaffId" type="xs:int" />
              <xs:element name="StaffInfo_PersonId" msprop:Generator_ColumnPropNameInRow="StaffInfo_PersonId" msprop:Generator_ColumnPropNameInTable="StaffInfo_PersonIdColumn" msprop:Generator_ColumnVarNameInTable="columnStaffInfo_PersonId" msprop:Generator_UserColumnName="StaffInfo_PersonId" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:__MigrationHistory" />
      <xs:field xpath="mstns:MigrationId" />
      <xs:field xpath="mstns:ContextKey" />
    </xs:unique>
    <xs:unique name="Appointments_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Appointments" />
      <xs:field xpath="mstns:AppointmentId" />
    </xs:unique>
    <xs:unique name="Doctors_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Doctors" />
      <xs:field xpath="mstns:DoctorId" />
    </xs:unique>
    <xs:unique name="DoctorSpecializations_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:DoctorSpecializations" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="Patients_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Patients" />
      <xs:field xpath="mstns:PatientId" />
    </xs:unique>
    <xs:unique name="People_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:People" />
      <xs:field xpath="mstns:PersonId" />
    </xs:unique>
    <xs:unique name="PeopleRoles_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:PeopleRoles" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="RolePersons_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:RolePersons" />
      <xs:field xpath="mstns:Role_RoleId" />
      <xs:field xpath="mstns:Person_PersonId" />
    </xs:unique>
    <xs:unique name="Roles_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Roles" />
      <xs:field xpath="mstns:RoleId" />
    </xs:unique>
    <xs:unique name="SpecializationDoctors_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:SpecializationDoctors" />
      <xs:field xpath="mstns:Specialization_SpecializationId" />
      <xs:field xpath="mstns:Doctor_DoctorId" />
    </xs:unique>
    <xs:unique name="Specializations_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Specializations" />
      <xs:field xpath="mstns:SpecializationId" />
    </xs:unique>
    <xs:unique name="Staffs_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Staffs" />
      <xs:field xpath="mstns:StaffId" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_dbo.Appointments_dbo.Doctors_DoctorId" msdata:parent="Doctors" msdata:child="Appointments" msdata:parentkey="DoctorId" msdata:childkey="DoctorId" msprop:Generator_UserParentTable="Doctors" msprop:Generator_UserChildTable="Appointments" msprop:Generator_RelationVarName="_relationFK_dbo_Appointments_dbo_Doctors_DoctorId" msprop:Generator_UserRelationName="FK_dbo.Appointments_dbo.Doctors_DoctorId" msprop:Generator_ChildPropName="GetAppointmentsRows" msprop:Generator_ParentPropName="DoctorsRow" />
      <msdata:Relationship name="FK_dbo.Appointments_dbo.Patients_AppointmentId" msdata:parent="Patients" msdata:child="Appointments" msdata:parentkey="PatientId" msdata:childkey="AppointmentId" msprop:Generator_UserParentTable="Patients" msprop:Generator_UserChildTable="Appointments" msprop:Generator_RelationVarName="_relationFK_dbo_Appointments_dbo_Patients_AppointmentId" msprop:Generator_UserRelationName="FK_dbo.Appointments_dbo.Patients_AppointmentId" msprop:Generator_ChildPropName="GetAppointmentsRows" msprop:Generator_ParentPropName="PatientsRow" />
      <msdata:Relationship name="FK_dbo.Doctors_dbo.People_DoctorInfo_PersonId" msdata:parent="People" msdata:child="Doctors" msdata:parentkey="PersonId" msdata:childkey="DoctorInfo_PersonId" msprop:Generator_UserParentTable="People" msprop:Generator_UserChildTable="Doctors" msprop:Generator_RelationVarName="_relationFK_dbo_Doctors_dbo_People_DoctorInfo_PersonId" msprop:Generator_UserRelationName="FK_dbo.Doctors_dbo.People_DoctorInfo_PersonId" msprop:Generator_ChildPropName="GetDoctorsRows" msprop:Generator_ParentPropName="PeopleRow" />
      <msdata:Relationship name="FK_dbo.DoctorSpecializations_dbo.Doctors_DoctorId" msdata:parent="Doctors" msdata:child="DoctorSpecializations" msdata:parentkey="DoctorId" msdata:childkey="DoctorId" msprop:Generator_UserParentTable="Doctors" msprop:Generator_UserChildTable="DoctorSpecializations" msprop:Generator_RelationVarName="_relationFK_dbo_DoctorSpecializations_dbo_Doctors_DoctorId" msprop:Generator_ChildPropName="GetDoctorSpecializationsRows" msprop:Generator_ParentPropName="DoctorsRow" msprop:Generator_UserRelationName="FK_dbo.DoctorSpecializations_dbo.Doctors_DoctorId" />
      <msdata:Relationship name="FK_dbo.DoctorSpecializations_dbo.Specializations_SpecializationId" msdata:parent="Specializations" msdata:child="DoctorSpecializations" msdata:parentkey="SpecializationId" msdata:childkey="SpecializationId" msprop:Generator_UserParentTable="Specializations" msprop:Generator_UserChildTable="DoctorSpecializations" msprop:Generator_RelationVarName="_relationFK_dbo_DoctorSpecializations_dbo_Specializations_SpecializationId" msprop:Generator_UserRelationName="FK_dbo.DoctorSpecializations_dbo.Specializations_SpecializationId" msprop:Generator_ChildPropName="GetDoctorSpecializationsRows" msprop:Generator_ParentPropName="SpecializationsRow" />
      <msdata:Relationship name="FK_dbo.Patients_dbo.People_PatientInfo_PersonId" msdata:parent="People" msdata:child="Patients" msdata:parentkey="PersonId" msdata:childkey="PatientInfo_PersonId" msprop:Generator_UserParentTable="People" msprop:Generator_UserChildTable="Patients" msprop:Generator_RelationVarName="_relationFK_dbo_Patients_dbo_People_PatientInfo_PersonId" msprop:Generator_UserRelationName="FK_dbo.Patients_dbo.People_PatientInfo_PersonId" msprop:Generator_ChildPropName="GetPatientsRows" msprop:Generator_ParentPropName="PeopleRow" />
      <msdata:Relationship name="FK_dbo.PeopleRoles_dbo.People_PersonId" msdata:parent="People" msdata:child="PeopleRoles" msdata:parentkey="PersonId" msdata:childkey="PersonId" msprop:Generator_UserParentTable="People" msprop:Generator_UserChildTable="PeopleRoles" msprop:Generator_RelationVarName="_relationFK_dbo_PeopleRoles_dbo_People_PersonId" msprop:Generator_ChildPropName="GetPeopleRolesRows" msprop:Generator_ParentPropName="PeopleRow" msprop:Generator_UserRelationName="FK_dbo.PeopleRoles_dbo.People_PersonId" />
      <msdata:Relationship name="FK_dbo.PeopleRoles_dbo.Roles_RoleId" msdata:parent="Roles" msdata:child="PeopleRoles" msdata:parentkey="RoleId" msdata:childkey="RoleId" msprop:Generator_UserParentTable="Roles" msprop:Generator_UserChildTable="PeopleRoles" msprop:Generator_RelationVarName="_relationFK_dbo_PeopleRoles_dbo_Roles_RoleId" msprop:Generator_UserRelationName="FK_dbo.PeopleRoles_dbo.Roles_RoleId" msprop:Generator_ChildPropName="GetPeopleRolesRows" msprop:Generator_ParentPropName="RolesRow" />
      <msdata:Relationship name="FK_dbo.RolePersons_dbo.People_Person_PersonId" msdata:parent="People" msdata:child="RolePersons" msdata:parentkey="PersonId" msdata:childkey="Person_PersonId" msprop:Generator_UserParentTable="People" msprop:Generator_UserChildTable="RolePersons" msprop:Generator_RelationVarName="_relationFK_dbo_RolePersons_dbo_People_Person_PersonId" msprop:Generator_ChildPropName="GetRolePersonsRows" msprop:Generator_ParentPropName="PeopleRow" msprop:Generator_UserRelationName="FK_dbo.RolePersons_dbo.People_Person_PersonId" />
      <msdata:Relationship name="FK_dbo.RolePersons_dbo.Roles_Role_RoleId" msdata:parent="Roles" msdata:child="RolePersons" msdata:parentkey="RoleId" msdata:childkey="Role_RoleId" msprop:Generator_UserParentTable="Roles" msprop:Generator_UserChildTable="RolePersons" msprop:Generator_RelationVarName="_relationFK_dbo_RolePersons_dbo_Roles_Role_RoleId" msprop:Generator_UserRelationName="FK_dbo.RolePersons_dbo.Roles_Role_RoleId" msprop:Generator_ChildPropName="GetRolePersonsRows" msprop:Generator_ParentPropName="RolesRow" />
      <msdata:Relationship name="FK_dbo.SpecializationDoctors_dbo.Doctors_Doctor_DoctorId" msdata:parent="Doctors" msdata:child="SpecializationDoctors" msdata:parentkey="DoctorId" msdata:childkey="Doctor_DoctorId" msprop:Generator_UserParentTable="Doctors" msprop:Generator_UserChildTable="SpecializationDoctors" msprop:Generator_RelationVarName="_relationFK_dbo_SpecializationDoctors_dbo_Doctors_Doctor_DoctorId" msprop:Generator_ChildPropName="GetSpecializationDoctorsRows" msprop:Generator_ParentPropName="DoctorsRow" msprop:Generator_UserRelationName="FK_dbo.SpecializationDoctors_dbo.Doctors_Doctor_DoctorId" />
      <msdata:Relationship name="FK_dbo.SpecializationDoctors_dbo.Specializations_Specialization_SpecializationId" msdata:parent="Specializations" msdata:child="SpecializationDoctors" msdata:parentkey="SpecializationId" msdata:childkey="Specialization_SpecializationId" msprop:Generator_UserParentTable="Specializations" msprop:Generator_UserChildTable="SpecializationDoctors" msprop:Generator_RelationVarName="_relationFK_dbo_SpecializationDoctors_dbo_Specializations_Specialization_SpecializationId" msprop:Generator_UserRelationName="FK_dbo.SpecializationDoctors_dbo.Specializations_Specialization_SpecializationId" msprop:Generator_ChildPropName="GetSpecializationDoctorsRows" msprop:Generator_ParentPropName="SpecializationsRow" />
      <msdata:Relationship name="FK_dbo.Staffs_dbo.People_StaffInfo_PersonId" msdata:parent="People" msdata:child="Staffs" msdata:parentkey="PersonId" msdata:childkey="StaffInfo_PersonId" msprop:Generator_UserParentTable="People" msprop:Generator_UserChildTable="Staffs" msprop:Generator_RelationVarName="_relationFK_dbo_Staffs_dbo_People_StaffInfo_PersonId" msprop:Generator_ChildPropName="GetStaffsRows" msprop:Generator_ParentPropName="PeopleRow" msprop:Generator_UserRelationName="FK_dbo.Staffs_dbo.People_StaffInfo_PersonId" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>